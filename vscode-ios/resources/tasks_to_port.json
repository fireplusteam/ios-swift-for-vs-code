{
    "version": "2.0.0",
    "options": {
        "env": {
            "envFile": ".vscode/.env"
        }
    },
    "tasks": [
        {
            "label": "iOS: Clean Derived Data",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/clean_derived_data.sh",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": "build",
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "iOS: Build Selected Target",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/build_app.sh",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "args": ["-TARGET"],
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["iOS: Validate Enviroment"]
        },
        {
            "label": "iOS: Build ALL",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/build_app.sh",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "args": ["-ALL"],
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["iOS: Validate Enviroment"]
        },
        {
            "label": "iOS: Build: Current File",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/compile_current_file.sh",
            "args": [
                "${file}"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOrder": "sequence"
        },
        {
            "label": "iOS: Name Of Module By Current File",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/module_name_by_file.sh",
            "args": [
                "${file}"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOrder": "sequence"
        },
        {
            "label": "iOS: Build Tests",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/build_app.sh",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "args": ["-TESTING"],
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["iOS: Validate Enviroment"],
            "dependsOrder": "sequence"
        },
        {
            "label": "iOS: Build Tests: Current File",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/build_app.sh",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "args": [
                "-TESTING_ONLY_TESTS",
                "${input:myTestsOfCurrentFile}"
            ],
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["Store VS Config", "iOS: Validate Enviroment"],
            "dependsOrder": "sequence"
        },
        {
            "label": "Run iOS App",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/run_app.sh",
            "args": ["RUNNING"],
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["iOS: Terminate Current iOS App", "iOS: Build Selected Target", "Start Show Logs"],
            "dependsOrder": "sequence"
        },
        {
            "label": "Run & Debug iOS App",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/run_app.sh",
            "args": ["LLDB_DEBUG"],
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["iOS: Terminate Current iOS App", "iOS: Build Selected Target", "iOS: Start LLDB Debugger iOS App"],
            "dependsOrder": "sequence"
        },
        {   // assume that all destination devices have the same architecture so they can launch
            "label": "iOS: Run on Multiple Devices",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/run_app.sh",
            "args": ["RUNNING", "-DEVICES", "${input:myMultipleDestinationDevice}"],
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["iOS: Terminate Current iOS App", "iOS: Build Selected Target"],
            "dependsOrder": "sequence"
        },
        { // needed to give a chance to vs code to update it's state
            "label": "Sleep", 
            "type": "shell",
            "command": "sleep 1",
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "iOS: Terminate Current iOS App",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/terminate_current_running_app.sh",
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "Start Show Logs",
            "command": "${command:launches.showIOSDebugLogs}",
            "group": "none",
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "iOS: Start LLDB Debugger iOS App",
            "type": "shell",
            "command": "${command:launches.startIOSDebuging}",
            "dependsOrder": "sequence",
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "iOS: Tests: Run All",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/test_app.sh",
            "args": [
                "${input:selectDebbuger}",
                "-ALL"
            ],
            "group": {
                "kind": "test",
                "isDefault": false,
                "isTestCommand": true
            },
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["iOS: Terminate Current iOS App", "iOS: Build Tests", "iOS: Start LLDB Debugger iOS App"],
            "dependsOrder": "sequence"
        },
        {
            "label": "iOS: Tests: Run Current Class",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/test_app.sh",
            "args": [
                "${input:selectDebbuger}",
                "-CLASS",
                "CURRENTLY_SELECTED"
            ],
            "group": {
                "kind": "test",
                "isDefault": false,
                "isTestCommand": true
            },
            "presentation": {
                "clear": true,
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn":["iOS: Terminate Current iOS App", "iOS: Build Tests: Current File", "iOS: Start LLDB Debugger iOS App"],
            "dependsOrder": "sequence"
        },
        {
            "label": "iOS: Generate xCode Server",
            "type": "shell",
            "command": "${workspaceFolder}/.vscode/build_autocomplete.sh",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "dependsOn":["iOS: Validate Enviroment"]
        },
        {
            "label": "iOS: Bind Autocomplete",
            "type": "shell",
            "command": ".vscode/restart_lsp_swift.sh",
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "dependsOn": [
                "iOS: Generate xCode Server"
            ]
        },
        {
            "label": "iOS: Select DEBUG Destination Device",
            "type": "shell",
            "command": ".vscode/update_enviroment.sh",
            "args": [
                "-destinationDevice",
                "${input:myDestinationDevice}"
            ],
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "problemMatcher": [], 
            "dependsOn":["iOS: Validate Enviroment"],
            "group": "none"
        },
        {
            "label": "iOS: Select Scheme",
            "type": "shell",
            "command": ".vscode/update_enviroment.sh",
            "args": [
                "-destinationScheme",
                "${input:myDestinationScheme}"
            ],
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
            "problemMatcher": [],
            "dependsOn":["iOS: Validate Enviroment"],
            "runOptions": {"runOn": "folderOpen"},
            "group": "none"
        },
        {
            "label": "iOS: Validate Enviroment",
            "type": "shell",
            "command": ".vscode/check_workspace.sh",
            "group": "none",
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "Store VS Config",
            "type": "shell",
            "command": ".vscode/store_vs_config.sh",
            "args": [
                "${file}"
            ],
            "presentation": {
                "reveal": "silent",
                "revealProblems": "onProblem"
            },
        },
        {
            "label": "iOS: Print Last Compile Errors",
            "type": "shell",
            "command": "python3",
            "args": [".vscode/print_errors.py"]
        },
        {
            "label": "iOS: Print Last Test Errors",
            "type": "shell",
            "command": "python3",
            "args": [".vscode/print_errors.py", ".logs/tests.log"]
        }
    ],
    "inputs": [
        {
            "type": "pickString",
            "id": "selectDebbuger",
            "description": "Do you want to attach debugger?",
            "options": [
                {"label": "Debug", "value": "DEBUG_LLDB"},
                {"label": "Run", "value": "RUNNING"},
                {"label": "Cancel", "value": "CANCEL"}
            ],
            "default": "Debug"
        },
        {
            "id": "myDestinationDevice",
            "type": "command",
            // first try to read from the disk or select again
            "command": "dynamic-inputs.read",
            "args": {
                "command": "bash",
                // a script which prints JSON array to stdout as the last line
                "args": [
                    "${workspaceFolder}/.vscode/populate_devices.sh",
                    "-single"
                ],
                "envFile": "${workspaceFolder}/.vscode/.env",
                "cwd": "${workspaceFolder}",
                // memoize the selection for the future
                "var": "myDestinationDevice",
                // map options to values
                "unwrap": "$.value",
                "serializer": "plain",
                "quickPickOptions": {
                    "canPickMany": false,
                    //"ignoreFocusOut": true,
                    "placeHolder": "Please select Device for DEBUG",
                    "title": "Device"
                }
            }
        },
        {
            "id": "myMultipleDestinationDevice",
            "type": "command",
            // first try to read from the disk or select again
            "command": "dynamic-inputs.write",
            "args": {
                "command": "bash",
                // a script which prints JSON array to stdout as the last line
                "args": [
                    "${workspaceFolder}/.vscode/populate_devices.sh",
                    "-multi"
                ],
                "envFile": "${workspaceFolder}/.vscode/.env",
                "cwd": "${workspaceFolder}",
                // memoize the selection for the future
                "var": "myMultipleDestinationDevice",
                // map options to values
                "unwrap": "$[*].value",
                "serializer": "plain",
                "quickPickOptions": {
                    "canPickMany": true, // should be false, but it's not working for some reason
                    //"ignoreFocusOut": true,
                    "placeHolder": "Please select Multiple Devices to Run You App",
                    "title": "Devices"
                }
            }
        },
        {
            "id": "myDestinationScheme",
            "type": "command",
            // first try to read from the disk or select again
            "command": "dynamic-inputs.read",
            "args": {
                "command": "bash",
                // a script which prints JSON array to stdout as the last line
                "args": [
                    "${workspaceFolder}/.vscode/populate_schemes.sh"
                ],
                "envFile": "${workspaceFolder}/.vscode/.env",
                "cwd": "${workspaceFolder}",
                // memoize the selection for the future
                "var": "myDestinationScheme",
                // map options to values
                "unwrap": "$.value",
                "serializer": "plain",
                "quickPickOptions": {
                    "canPickMany": false,
                    //"ignoreFocusOut": true,
                    "placeHolder": "Please select Target",
                    "title": "Target"
                }
            }
        },
        {
            "id": "myTestsOfCurrentFile",
            "type": "command",
            // first try to read from the disk or select again
            "command": "dynamic-inputs.read",
            "args": {
                "command": "bash",
                // a script which prints JSON array to stdout as the last line
                "args": [
                    "${workspaceFolder}/.vscode/populate_tests_of_current_file.sh"
                ],
                "envFile": "${workspaceFolder}/.vscode/.env",
                "cwd": "${workspaceFolder}",
                // memoize the selection for the future
                "var": "myTestsOfCurrentFile",
                // map options to values
                "unwrap": "$[*].value",
                "serializer": "plain",
                "quickPickOptions": {
                    "canPickMany": true, // should be false, but it's not working for some reason
                    "ignoreFocusOut": true,
                    "placeHolder": "Please select Tests",
                    "title": "Tests"
                }
            }
        } 
    ]
}